
line:     formato del fichero elf64-x86-64


Desensamblado de la sección .init:

0000000000400970 <_init>:
  400970:	48 83 ec 08          	sub    $0x8,%rsp
  400974:	48 8b 05 7d 16 20 00 	mov    0x20167d(%rip),%rax        # 601ff8 <_DYNAMIC+0x1f0>
  40097b:	48 85 c0             	test   %rax,%rax
  40097e:	74 05                	je     400985 <_init+0x15>
  400980:	e8 2b 00 00 00       	callq  4009b0 <__gmon_start__@plt>
  400985:	48 83 c4 08          	add    $0x8,%rsp
  400989:	c3                   	retq   

Desensamblado de la sección .plt:

0000000000400990 <memset@plt-0x10>:
  400990:	ff 35 72 16 20 00    	pushq  0x201672(%rip)        # 602008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400996:	ff 25 74 16 20 00    	jmpq   *0x201674(%rip)        # 602010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40099c:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004009a0 <memset@plt>:
  4009a0:	ff 25 72 16 20 00    	jmpq   *0x201672(%rip)        # 602018 <_GLOBAL_OFFSET_TABLE_+0x18>
  4009a6:	68 00 00 00 00       	pushq  $0x0
  4009ab:	e9 e0 ff ff ff       	jmpq   400990 <_init+0x20>

00000000004009b0 <__gmon_start__@plt>:
  4009b0:	ff 25 6a 16 20 00    	jmpq   *0x20166a(%rip)        # 602020 <_GLOBAL_OFFSET_TABLE_+0x20>
  4009b6:	68 01 00 00 00       	pushq  $0x1
  4009bb:	e9 d0 ff ff ff       	jmpq   400990 <_init+0x20>

00000000004009c0 <operator delete(void*)@plt>:
  4009c0:	ff 25 62 16 20 00    	jmpq   *0x201662(%rip)        # 602028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4009c6:	68 02 00 00 00       	pushq  $0x2
  4009cb:	e9 c0 ff ff ff       	jmpq   400990 <_init+0x20>

00000000004009d0 <std::ios_base::Init::Init()@plt>:
  4009d0:	ff 25 5a 16 20 00    	jmpq   *0x20165a(%rip)        # 602030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4009d6:	68 03 00 00 00       	pushq  $0x3
  4009db:	e9 b0 ff ff ff       	jmpq   400990 <_init+0x20>

00000000004009e0 <__libc_start_main@plt>:
  4009e0:	ff 25 52 16 20 00    	jmpq   *0x201652(%rip)        # 602038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4009e6:	68 04 00 00 00       	pushq  $0x4
  4009eb:	e9 a0 ff ff ff       	jmpq   400990 <_init+0x20>

00000000004009f0 <std::chrono::_V2::system_clock::now()@plt>:
  4009f0:	ff 25 4a 16 20 00    	jmpq   *0x20164a(%rip)        # 602040 <_GLOBAL_OFFSET_TABLE_+0x40>
  4009f6:	68 05 00 00 00       	pushq  $0x5
  4009fb:	e9 90 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a00 <__cxa_atexit@plt>:
  400a00:	ff 25 42 16 20 00    	jmpq   *0x201642(%rip)        # 602048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400a06:	68 06 00 00 00       	pushq  $0x6
  400a0b:	e9 80 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a10 <std::ios_base::Init::~Init()@plt>:
  400a10:	ff 25 3a 16 20 00    	jmpq   *0x20163a(%rip)        # 602050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400a16:	68 07 00 00 00       	pushq  $0x7
  400a1b:	e9 70 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a20 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>:
  400a20:	ff 25 32 16 20 00    	jmpq   *0x201632(%rip)        # 602058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400a26:	68 08 00 00 00       	pushq  $0x8
  400a2b:	e9 60 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a30 <memmove@plt>:
  400a30:	ff 25 2a 16 20 00    	jmpq   *0x20162a(%rip)        # 602060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400a36:	68 09 00 00 00       	pushq  $0x9
  400a3b:	e9 50 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a40 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>:
  400a40:	ff 25 22 16 20 00    	jmpq   *0x201622(%rip)        # 602068 <_GLOBAL_OFFSET_TABLE_+0x68>
  400a46:	68 0a 00 00 00       	pushq  $0xa
  400a4b:	e9 40 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a50 <std::ostream& std::ostream::_M_insert<double>(double)@plt>:
  400a50:	ff 25 1a 16 20 00    	jmpq   *0x20161a(%rip)        # 602070 <_GLOBAL_OFFSET_TABLE_+0x70>
  400a56:	68 0b 00 00 00       	pushq  $0xb
  400a5b:	e9 30 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a60 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>:
  400a60:	ff 25 12 16 20 00    	jmpq   *0x201612(%rip)        # 602078 <_GLOBAL_OFFSET_TABLE_+0x78>
  400a66:	68 0c 00 00 00       	pushq  $0xc
  400a6b:	e9 20 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a70 <__gxx_personality_v0@plt>:
  400a70:	ff 25 0a 16 20 00    	jmpq   *0x20160a(%rip)        # 602080 <_GLOBAL_OFFSET_TABLE_+0x80>
  400a76:	68 0d 00 00 00       	pushq  $0xd
  400a7b:	e9 10 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a80 <operator new(unsigned long)@plt>:
  400a80:	ff 25 02 16 20 00    	jmpq   *0x201602(%rip)        # 602088 <_GLOBAL_OFFSET_TABLE_+0x88>
  400a86:	68 0e 00 00 00       	pushq  $0xe
  400a8b:	e9 00 ff ff ff       	jmpq   400990 <_init+0x20>

0000000000400a90 <_Unwind_Resume@plt>:
  400a90:	ff 25 fa 15 20 00    	jmpq   *0x2015fa(%rip)        # 602090 <_GLOBAL_OFFSET_TABLE_+0x90>
  400a96:	68 0f 00 00 00       	pushq  $0xf
  400a9b:	e9 f0 fe ff ff       	jmpq   400990 <_init+0x20>

Desensamblado de la sección .text:

0000000000400aa0 <main>:
  400aa0:	41 57                	push   %r15
  400aa2:	41 56                	push   %r14
  400aa4:	bf 00 00 20 00       	mov    $0x200000,%edi
  400aa9:	41 55                	push   %r13
  400aab:	41 54                	push   %r12
  400aad:	55                   	push   %rbp
  400aae:	53                   	push   %rbx
  400aaf:	48 83 ec 18          	sub    $0x18,%rsp
  400ab3:	e8 c8 ff ff ff       	callq  400a80 <operator new(unsigned long)@plt>
  400ab8:	ba 00 00 20 00       	mov    $0x200000,%edx
  400abd:	31 f6                	xor    %esi,%esi
  400abf:	48 89 c7             	mov    %rax,%rdi
  400ac2:	48 89 c3             	mov    %rax,%rbx
  400ac5:	e8 d6 fe ff ff       	callq  4009a0 <memset@plt>
  400aca:	ba 01 00 00 00       	mov    $0x1,%edx
  400acf:	be 84 12 40 00       	mov    $0x401284,%esi
  400ad4:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400ad9:	e8 42 ff ff ff       	callq  400a20 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  400ade:	48 8b 05 db 15 20 00 	mov    0x2015db(%rip),%rax        # 6020c0 <std::cout@@GLIBCXX_3.4>
  400ae5:	ba 04 00 00 00       	mov    $0x4,%edx
  400aea:	be 86 12 40 00       	mov    $0x401286,%esi
  400aef:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400af4:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  400af8:	48 c7 80 d0 20 60 00 	movq   $0xb,0x6020d0(%rax)
  400aff:	0b 00 00 00 
  400b03:	e8 18 ff ff ff       	callq  400a20 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  400b08:	48 8b 05 b1 15 20 00 	mov    0x2015b1(%rip),%rax        # 6020c0 <std::cout@@GLIBCXX_3.4>
  400b0f:	ba 04 00 00 00       	mov    $0x4,%edx
  400b14:	be 8b 12 40 00       	mov    $0x40128b,%esi
  400b19:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400b1e:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  400b22:	48 c7 80 d0 20 60 00 	movq   $0xc,0x6020d0(%rax)
  400b29:	0c 00 00 00 
  400b2d:	e8 ee fe ff ff       	callq  400a20 <std::basic_ostream<char, std::char_traits<char> >& std::__ostream_insert<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&, char const*, long)@plt>
  400b32:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400b37:	e8 24 ff ff ff       	callq  400a60 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
  400b3c:	c7 44 24 0c 0b 00 00 	movl   $0xb,0xc(%rsp)
  400b43:	00 
  400b44:	bd 01 00 00 00       	mov    $0x1,%ebp
  400b49:	bf 20 03 00 00       	mov    $0x320,%edi
  400b4e:	e8 2d ff ff ff       	callq  400a80 <operator new(unsigned long)@plt>
  400b53:	48 8d 78 08          	lea    0x8(%rax),%rdi
  400b57:	48 89 c1             	mov    %rax,%rcx
  400b5a:	49 89 c4             	mov    %rax,%r12
  400b5d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  400b64:	48 c7 80 18 03 00 00 	movq   $0x0,0x318(%rax)
  400b6b:	00 00 00 00 
  400b6f:	4c 8d b0 20 03 00 00 	lea    0x320(%rax),%r14
  400b76:	48 83 e7 f8          	and    $0xfffffffffffffff8,%rdi
  400b7a:	31 c0                	xor    %eax,%eax
  400b7c:	4d 89 e5             	mov    %r12,%r13
  400b7f:	48 29 f9             	sub    %rdi,%rcx
  400b82:	81 c1 20 03 00 00    	add    $0x320,%ecx
  400b88:	c1 e9 03             	shr    $0x3,%ecx
  400b8b:	f3 48 ab             	rep stos %rax,%es:(%rdi)
  400b8e:	e8 5d fe ff ff       	callq  4009f0 <std::chrono::_V2::system_clock::now()@plt>
  400b93:	31 c9                	xor    %ecx,%ecx
  400b95:	49 89 c7             	mov    %rax,%r15
  400b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400b9f:	00 
  400ba0:	31 c0                	xor    %eax,%eax
  400ba2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
  400ba8:	89 c2                	mov    %eax,%edx
  400baa:	01 e8                	add    %ebp,%eax
  400bac:	80 04 13 01          	addb   $0x1,(%rbx,%rdx,1)
  400bb0:	3d ff ff 1f 00       	cmp    $0x1fffff,%eax
  400bb5:	76 f1                	jbe    400ba8 <main+0x108>
  400bb7:	83 c1 01             	add    $0x1,%ecx
  400bba:	39 cd                	cmp    %ecx,%ebp
  400bbc:	75 e2                	jne    400ba0 <main+0x100>
  400bbe:	e8 2d fe ff ff       	callq  4009f0 <std::chrono::_V2::system_clock::now()@plt>
  400bc3:	66 0f ef c0          	pxor   %xmm0,%xmm0
  400bc7:	4c 29 f8             	sub    %r15,%rax
  400bca:	49 83 c5 08          	add    $0x8,%r13
  400bce:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
  400bd3:	f2 0f 59 05 b5 06 00 	mulsd  0x6b5(%rip),%xmm0        # 401290 <_IO_stdin_used+0x10>
  400bda:	00 
  400bdb:	f2 41 0f 11 45 f8    	movsd  %xmm0,-0x8(%r13)
  400be1:	4d 39 ee             	cmp    %r13,%r14
  400be4:	75 a8                	jne    400b8e <main+0xee>
  400be6:	49 8d b4 24 90 01 00 	lea    0x190(%r12),%rsi
  400bed:	00 
  400bee:	4c 39 f6             	cmp    %r14,%rsi
  400bf1:	74 15                	je     400c08 <main+0x168>
  400bf3:	50                   	push   %rax
  400bf4:	6a 00                	pushq  $0x0
  400bf6:	b9 0c 00 00 00       	mov    $0xc,%ecx
  400bfb:	4c 89 f2             	mov    %r14,%rdx
  400bfe:	4c 89 e7             	mov    %r12,%rdi
  400c01:	e8 3a 03 00 00       	callq  400f40 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)>
  400c06:	5a                   	pop    %rdx
  400c07:	59                   	pop    %rcx
  400c08:	48 8b 05 b1 14 20 00 	mov    0x2014b1(%rip),%rax        # 6020c0 <std::cout@@GLIBCXX_3.4>
  400c0f:	f2 41 0f 10 8c 24 90 	movsd  0x190(%r12),%xmm1
  400c16:	01 00 00 
  400c19:	89 ee                	mov    %ebp,%esi
  400c1b:	bf c0 20 60 00       	mov    $0x6020c0,%edi
  400c20:	f2 0f 11 0c 24       	movsd  %xmm1,(%rsp)
  400c25:	48 8b 40 e8          	mov    -0x18(%rax),%rax
  400c29:	48 c7 80 d0 20 60 00 	movq   $0xc,0x6020d0(%rax)
  400c30:	0c 00 00 00 
  400c34:	e8 07 fe ff ff       	callq  400a40 <std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long)@plt>
  400c39:	48 8b 08             	mov    (%rax),%rcx
  400c3c:	48 89 c6             	mov    %rax,%rsi
  400c3f:	48 89 c7             	mov    %rax,%rdi
  400c42:	f2 0f 10 04 24       	movsd  (%rsp),%xmm0
  400c47:	48 8b 51 e8          	mov    -0x18(%rcx),%rdx
  400c4b:	48 c7 44 10 10 0c 00 	movq   $0xc,0x10(%rax,%rdx,1)
  400c52:	00 00 
  400c54:	48 03 71 e8          	add    -0x18(%rcx),%rsi
  400c58:	8b 56 18             	mov    0x18(%rsi),%edx
  400c5b:	48 c7 46 08 03 00 00 	movq   $0x3,0x8(%rsi)
  400c62:	00 
  400c63:	81 e2 fb fe ff ff    	and    $0xfffffefb,%edx
  400c69:	83 ca 04             	or     $0x4,%edx
  400c6c:	89 56 18             	mov    %edx,0x18(%rsi)
  400c6f:	48 8b 51 e8          	mov    -0x18(%rcx),%rdx
  400c73:	48 c7 44 10 10 0c 00 	movq   $0xc,0x10(%rax,%rdx,1)
  400c7a:	00 00 
  400c7c:	e8 cf fd ff ff       	callq  400a50 <std::ostream& std::ostream::_M_insert<double>(double)@plt>
  400c81:	48 89 c7             	mov    %rax,%rdi
  400c84:	e8 d7 fd ff ff       	callq  400a60 <std::basic_ostream<char, std::char_traits<char> >& std::endl<char, std::char_traits<char> >(std::basic_ostream<char, std::char_traits<char> >&)@plt>
  400c89:	4c 89 e7             	mov    %r12,%rdi
  400c8c:	01 ed                	add    %ebp,%ebp
  400c8e:	e8 2d fd ff ff       	callq  4009c0 <operator delete(void*)@plt>
  400c93:	83 6c 24 0c 01       	subl   $0x1,0xc(%rsp)
  400c98:	0f 85 ab fe ff ff    	jne    400b49 <main+0xa9>
  400c9e:	48 89 df             	mov    %rbx,%rdi
  400ca1:	e8 1a fd ff ff       	callq  4009c0 <operator delete(void*)@plt>
  400ca6:	48 83 c4 18          	add    $0x18,%rsp
  400caa:	31 c0                	xor    %eax,%eax
  400cac:	5b                   	pop    %rbx
  400cad:	5d                   	pop    %rbp
  400cae:	41 5c                	pop    %r12
  400cb0:	41 5d                	pop    %r13
  400cb2:	41 5e                	pop    %r14
  400cb4:	41 5f                	pop    %r15
  400cb6:	c3                   	retq   
  400cb7:	48 89 c5             	mov    %rax,%rbp
  400cba:	48 89 df             	mov    %rbx,%rdi
  400cbd:	e8 fe fc ff ff       	callq  4009c0 <operator delete(void*)@plt>
  400cc2:	48 89 ef             	mov    %rbp,%rdi
  400cc5:	e8 c6 fd ff ff       	callq  400a90 <_Unwind_Resume@plt>
  400cca:	4c 89 e7             	mov    %r12,%rdi
  400ccd:	48 89 c5             	mov    %rax,%rbp
  400cd0:	e8 eb fc ff ff       	callq  4009c0 <operator delete(void*)@plt>
  400cd5:	eb e3                	jmp    400cba <main+0x21a>
  400cd7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400cde:	00 00 

0000000000400ce0 <_GLOBAL__sub_I_main>:
  400ce0:	48 83 ec 08          	sub    $0x8,%rsp
  400ce4:	bf d1 21 60 00       	mov    $0x6021d1,%edi
  400ce9:	e8 e2 fc ff ff       	callq  4009d0 <std::ios_base::Init::Init()@plt>
  400cee:	ba a0 20 60 00       	mov    $0x6020a0,%edx
  400cf3:	be d1 21 60 00       	mov    $0x6021d1,%esi
  400cf8:	bf 10 0a 40 00       	mov    $0x400a10,%edi
  400cfd:	48 83 c4 08          	add    $0x8,%rsp
  400d01:	e9 fa fc ff ff       	jmpq   400a00 <__cxa_atexit@plt>
  400d06:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d0d:	00 00 00 

0000000000400d10 <set_fast_math>:
  400d10:	0f ae 5c 24 fc       	stmxcsr -0x4(%rsp)
  400d15:	81 4c 24 fc 40 80 00 	orl    $0x8040,-0x4(%rsp)
  400d1c:	00 
  400d1d:	0f ae 54 24 fc       	ldmxcsr -0x4(%rsp)
  400d22:	c3                   	retq   
  400d23:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d2a:	00 00 00 
  400d2d:	0f 1f 00             	nopl   (%rax)

0000000000400d30 <_start>:
  400d30:	31 ed                	xor    %ebp,%ebp
  400d32:	49 89 d1             	mov    %rdx,%r9
  400d35:	5e                   	pop    %rsi
  400d36:	48 89 e2             	mov    %rsp,%rdx
  400d39:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  400d3d:	50                   	push   %rax
  400d3e:	54                   	push   %rsp
  400d3f:	49 c7 c0 70 12 40 00 	mov    $0x401270,%r8
  400d46:	48 c7 c1 00 12 40 00 	mov    $0x401200,%rcx
  400d4d:	48 c7 c7 a0 0a 40 00 	mov    $0x400aa0,%rdi
  400d54:	e8 87 fc ff ff       	callq  4009e0 <__libc_start_main@plt>
  400d59:	f4                   	hlt    
  400d5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400d60 <deregister_tm_clones>:
  400d60:	b8 af 20 60 00       	mov    $0x6020af,%eax
  400d65:	55                   	push   %rbp
  400d66:	48 2d a8 20 60 00    	sub    $0x6020a8,%rax
  400d6c:	48 83 f8 0e          	cmp    $0xe,%rax
  400d70:	48 89 e5             	mov    %rsp,%rbp
  400d73:	76 1b                	jbe    400d90 <deregister_tm_clones+0x30>
  400d75:	b8 00 00 00 00       	mov    $0x0,%eax
  400d7a:	48 85 c0             	test   %rax,%rax
  400d7d:	74 11                	je     400d90 <deregister_tm_clones+0x30>
  400d7f:	5d                   	pop    %rbp
  400d80:	bf a8 20 60 00       	mov    $0x6020a8,%edi
  400d85:	ff e0                	jmpq   *%rax
  400d87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400d8e:	00 00 
  400d90:	5d                   	pop    %rbp
  400d91:	c3                   	retq   
  400d92:	0f 1f 40 00          	nopl   0x0(%rax)
  400d96:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400d9d:	00 00 00 

0000000000400da0 <register_tm_clones>:
  400da0:	be a8 20 60 00       	mov    $0x6020a8,%esi
  400da5:	55                   	push   %rbp
  400da6:	48 81 ee a8 20 60 00 	sub    $0x6020a8,%rsi
  400dad:	48 c1 fe 03          	sar    $0x3,%rsi
  400db1:	48 89 e5             	mov    %rsp,%rbp
  400db4:	48 89 f0             	mov    %rsi,%rax
  400db7:	48 c1 e8 3f          	shr    $0x3f,%rax
  400dbb:	48 01 c6             	add    %rax,%rsi
  400dbe:	48 d1 fe             	sar    %rsi
  400dc1:	74 15                	je     400dd8 <register_tm_clones+0x38>
  400dc3:	b8 00 00 00 00       	mov    $0x0,%eax
  400dc8:	48 85 c0             	test   %rax,%rax
  400dcb:	74 0b                	je     400dd8 <register_tm_clones+0x38>
  400dcd:	5d                   	pop    %rbp
  400dce:	bf a8 20 60 00       	mov    $0x6020a8,%edi
  400dd3:	ff e0                	jmpq   *%rax
  400dd5:	0f 1f 00             	nopl   (%rax)
  400dd8:	5d                   	pop    %rbp
  400dd9:	c3                   	retq   
  400dda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400de0 <__do_global_dtors_aux>:
  400de0:	80 3d e9 13 20 00 00 	cmpb   $0x0,0x2013e9(%rip)        # 6021d0 <completed.7568>
  400de7:	75 11                	jne    400dfa <__do_global_dtors_aux+0x1a>
  400de9:	55                   	push   %rbp
  400dea:	48 89 e5             	mov    %rsp,%rbp
  400ded:	e8 6e ff ff ff       	callq  400d60 <deregister_tm_clones>
  400df2:	5d                   	pop    %rbp
  400df3:	c6 05 d6 13 20 00 01 	movb   $0x1,0x2013d6(%rip)        # 6021d0 <completed.7568>
  400dfa:	f3 c3                	repz retq 
  400dfc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400e00 <frame_dummy>:
  400e00:	bf 00 1e 60 00       	mov    $0x601e00,%edi
  400e05:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400e09:	75 05                	jne    400e10 <frame_dummy+0x10>
  400e0b:	eb 93                	jmp    400da0 <register_tm_clones>
  400e0d:	0f 1f 00             	nopl   (%rax)
  400e10:	b8 00 00 00 00       	mov    $0x0,%eax
  400e15:	48 85 c0             	test   %rax,%rax
  400e18:	74 f1                	je     400e0b <frame_dummy+0xb>
  400e1a:	55                   	push   %rbp
  400e1b:	48 89 e5             	mov    %rsp,%rbp
  400e1e:	ff d0                	callq  *%rax
  400e20:	5d                   	pop    %rbp
  400e21:	e9 7a ff ff ff       	jmpq   400da0 <register_tm_clones>
  400e26:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400e2d:	00 00 00 

0000000000400e30 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)>:
  400e30:	48 8d 42 ff          	lea    -0x1(%rdx),%rax
  400e34:	49 89 c3             	mov    %rax,%r11
  400e37:	49 c1 eb 3f          	shr    $0x3f,%r11
  400e3b:	49 01 c3             	add    %rax,%r11
  400e3e:	49 d1 fb             	sar    %r11
  400e41:	4c 39 de             	cmp    %r11,%rsi
  400e44:	0f 8d dc 00 00 00    	jge    400f26 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xf6>
  400e4a:	49 89 f0             	mov    %rsi,%r8
  400e4d:	0f 1f 00             	nopl   (%rax)
  400e50:	49 8d 40 01          	lea    0x1(%r8),%rax
  400e54:	4c 8d 14 00          	lea    (%rax,%rax,1),%r10
  400e58:	48 c1 e0 04          	shl    $0x4,%rax
  400e5c:	48 01 f8             	add    %rdi,%rax
  400e5f:	49 8d 4a ff          	lea    -0x1(%r10),%rcx
  400e63:	f2 0f 10 08          	movsd  (%rax),%xmm1
  400e67:	4c 8d 0c cf          	lea    (%rdi,%rcx,8),%r9
  400e6b:	f2 41 0f 10 11       	movsd  (%r9),%xmm2
  400e70:	66 0f 2f ca          	comisd %xmm2,%xmm1
  400e74:	f2 0f 5f ca          	maxsd  %xmm2,%xmm1
  400e78:	49 0f 43 ca          	cmovae %r10,%rcx
  400e7c:	49 0f 42 c1          	cmovb  %r9,%rax
  400e80:	4c 39 d9             	cmp    %r11,%rcx
  400e83:	f2 42 0f 11 0c c7    	movsd  %xmm1,(%rdi,%r8,8)
  400e89:	49 89 c8             	mov    %rcx,%r8
  400e8c:	7c c2                	jl     400e50 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x20>
  400e8e:	f6 c2 01             	test   $0x1,%dl
  400e91:	75 16                	jne    400ea9 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x79>
  400e93:	48 83 ea 02          	sub    $0x2,%rdx
  400e97:	49 89 d0             	mov    %rdx,%r8
  400e9a:	49 c1 e8 3f          	shr    $0x3f,%r8
  400e9e:	4c 01 c2             	add    %r8,%rdx
  400ea1:	48 d1 fa             	sar    %rdx
  400ea4:	48 39 ca             	cmp    %rcx,%rdx
  400ea7:	74 67                	je     400f10 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xe0>
  400ea9:	48 39 f1             	cmp    %rsi,%rcx
  400eac:	7e 5b                	jle    400f09 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xd9>
  400eae:	48 8d 51 ff          	lea    -0x1(%rcx),%rdx
  400eb2:	49 89 d0             	mov    %rdx,%r8
  400eb5:	49 c1 e8 3f          	shr    $0x3f,%r8
  400eb9:	49 01 d0             	add    %rdx,%r8
  400ebc:	49 d1 f8             	sar    %r8
  400ebf:	f2 42 0f 10 0c c7    	movsd  (%rdi,%r8,8),%xmm1
  400ec5:	66 0f 2f c1          	comisd %xmm1,%xmm0
  400ec9:	76 3e                	jbe    400f09 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xd9>
  400ecb:	4c 39 c6             	cmp    %r8,%rsi
  400ece:	4a 8d 04 c7          	lea    (%rdi,%r8,8),%rax
  400ed2:	f2 0f 11 0c cf       	movsd  %xmm1,(%rdi,%rcx,8)
  400ed7:	7d 30                	jge    400f09 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xd9>
  400ed9:	49 8d 50 ff          	lea    -0x1(%r8),%rdx
  400edd:	48 89 d1             	mov    %rdx,%rcx
  400ee0:	48 c1 e9 3f          	shr    $0x3f,%rcx
  400ee4:	48 01 ca             	add    %rcx,%rdx
  400ee7:	4c 89 c1             	mov    %r8,%rcx
  400eea:	48 d1 fa             	sar    %rdx
  400eed:	f2 0f 10 0c d7       	movsd  (%rdi,%rdx,8),%xmm1
  400ef2:	66 0f 2f c1          	comisd %xmm1,%xmm0
  400ef6:	76 11                	jbe    400f09 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xd9>
  400ef8:	49 89 d0             	mov    %rdx,%r8
  400efb:	f2 0f 11 0c cf       	movsd  %xmm1,(%rdi,%rcx,8)
  400f00:	4c 39 c6             	cmp    %r8,%rsi
  400f03:	4a 8d 04 c7          	lea    (%rdi,%r8,8),%rax
  400f07:	7c d0                	jl     400ed9 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xa9>
  400f09:	f2 0f 11 00          	movsd  %xmm0,(%rax)
  400f0d:	c3                   	retq   
  400f0e:	66 90                	xchg   %ax,%ax
  400f10:	48 8d 4c 09 01       	lea    0x1(%rcx,%rcx,1),%rcx
  400f15:	48 8d 14 cf          	lea    (%rdi,%rcx,8),%rdx
  400f19:	f2 0f 10 0a          	movsd  (%rdx),%xmm1
  400f1d:	f2 0f 11 08          	movsd  %xmm1,(%rax)
  400f21:	48 89 d0             	mov    %rdx,%rax
  400f24:	eb 83                	jmp    400ea9 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x79>
  400f26:	f6 c2 01             	test   $0x1,%dl
  400f29:	48 8d 04 f7          	lea    (%rdi,%rsi,8),%rax
  400f2d:	48 89 f1             	mov    %rsi,%rcx
  400f30:	0f 84 5d ff ff ff    	je     400e93 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0x63>
  400f36:	eb d1                	jmp    400f09 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)+0xd9>
  400f38:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400f3f:	00 

0000000000400f40 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)>:
  400f40:	41 57                	push   %r15
  400f42:	48 89 d0             	mov    %rdx,%rax
  400f45:	41 56                	push   %r14
  400f47:	41 55                	push   %r13
  400f49:	41 54                	push   %r12
  400f4b:	48 29 f8             	sub    %rdi,%rax
  400f4e:	55                   	push   %rbp
  400f4f:	53                   	push   %rbx
  400f50:	48 89 d5             	mov    %rdx,%rbp
  400f53:	48 89 fb             	mov    %rdi,%rbx
  400f56:	49 89 fe             	mov    %rdi,%r14
  400f59:	48 83 ec 18          	sub    $0x18,%rsp
  400f5d:	48 83 f8 1f          	cmp    $0x1f,%rax
  400f61:	0f 8e af 01 00 00    	jle    401116 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x1d6>
  400f67:	48 85 c9             	test   %rcx,%rcx
  400f6a:	49 89 f5             	mov    %rsi,%r13
  400f6d:	0f 84 d4 00 00 00    	je     401047 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x107>
  400f73:	f2 0f 10 0f          	movsd  (%rdi),%xmm1
  400f77:	48 c1 f8 04          	sar    $0x4,%rax
  400f7b:	f2 0f 10 53 08       	movsd  0x8(%rbx),%xmm2
  400f80:	48 8d 04 c3          	lea    (%rbx,%rax,8),%rax
  400f84:	48 83 e9 01          	sub    $0x1,%rcx
  400f88:	f2 0f 10 5d f8       	movsd  -0x8(%rbp),%xmm3
  400f8d:	f2 0f 10 00          	movsd  (%rax),%xmm0
  400f91:	66 0f 2f c2          	comisd %xmm2,%xmm0
  400f95:	0f 86 1e 02 00 00    	jbe    4011b9 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x279>
  400f9b:	66 0f 2f d8          	comisd %xmm0,%xmm3
  400f9f:	0f 87 24 02 00 00    	ja     4011c9 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x289>
  400fa5:	66 0f 2f da          	comisd %xmm2,%xmm3
  400fa9:	0f 86 30 02 00 00    	jbe    4011df <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x29f>
  400faf:	f2 0f 11 1b          	movsd  %xmm3,(%rbx)
  400fb3:	66 0f 28 c1          	movapd %xmm1,%xmm0
  400fb7:	f2 0f 11 4d f8       	movsd  %xmm1,-0x8(%rbp)
  400fbc:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
  400fc0:	48 8d 53 10          	lea    0x10(%rbx),%rdx
  400fc4:	48 89 e8             	mov    %rbp,%rax
  400fc7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  400fce:	00 00 
  400fd0:	f2 0f 10 52 f8       	movsd  -0x8(%rdx),%xmm2
  400fd5:	48 8d 72 f8          	lea    -0x8(%rdx),%rsi
  400fd9:	66 0f 2f ca          	comisd %xmm2,%xmm1
  400fdd:	77 36                	ja     401015 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xd5>
  400fdf:	48 83 e8 08          	sub    $0x8,%rax
  400fe3:	66 0f 2f c1          	comisd %xmm1,%xmm0
  400fe7:	76 15                	jbe    400ffe <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xbe>
  400fe9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
  400ff0:	48 83 e8 08          	sub    $0x8,%rax
  400ff4:	f2 0f 10 00          	movsd  (%rax),%xmm0
  400ff8:	66 0f 2f c1          	comisd %xmm1,%xmm0
  400ffc:	77 f2                	ja     400ff0 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xb0>
  400ffe:	48 39 f0             	cmp    %rsi,%rax
  401001:	76 18                	jbe    40101b <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xdb>
  401003:	f2 0f 11 42 f8       	movsd  %xmm0,-0x8(%rdx)
  401008:	f2 0f 11 10          	movsd  %xmm2,(%rax)
  40100c:	f2 0f 10 40 f8       	movsd  -0x8(%rax),%xmm0
  401011:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
  401015:	48 83 c2 08          	add    $0x8,%rdx
  401019:	eb b5                	jmp    400fd0 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x90>
  40101b:	49 39 f5             	cmp    %rsi,%r13
  40101e:	0f 82 dc 00 00 00    	jb     401100 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x1c0>
  401024:	48 89 f3             	mov    %rsi,%rbx
  401027:	48 89 e8             	mov    %rbp,%rax
  40102a:	48 29 d8             	sub    %rbx,%rax
  40102d:	66 0f 28 ca          	movapd %xmm2,%xmm1
  401031:	48 83 f8 1f          	cmp    $0x1f,%rax
  401035:	49 89 de             	mov    %rbx,%r14
  401038:	0f 8e d8 00 00 00    	jle    401116 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x1d6>
  40103e:	48 85 c9             	test   %rcx,%rcx
  401041:	0f 85 30 ff ff ff    	jne    400f77 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x37>
  401047:	4d 8d 65 08          	lea    0x8(%r13),%r12
  40104b:	4c 89 e0             	mov    %r12,%rax
  40104e:	4c 29 f0             	sub    %r14,%rax
  401051:	49 89 c6             	mov    %rax,%r14
  401054:	49 c1 fe 03          	sar    $0x3,%r14
  401058:	4d 8d 7e fe          	lea    -0x2(%r14),%r15
  40105c:	49 d1 ff             	sar    %r15
  40105f:	49 83 fe 01          	cmp    $0x1,%r14
  401063:	7f 6b                	jg     4010d0 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x190>
  401065:	49 39 ec             	cmp    %rbp,%r12
  401068:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
  40106c:	72 0b                	jb     401079 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x139>
  40106e:	eb 3d                	jmp    4010ad <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x16d>
  401070:	49 83 c4 08          	add    $0x8,%r12
  401074:	4c 39 e5             	cmp    %r12,%rbp
  401077:	76 34                	jbe    4010ad <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x16d>
  401079:	f2 41 0f 10 04 24    	movsd  (%r12),%xmm0
  40107f:	66 0f 2f c8          	comisd %xmm0,%xmm1
  401083:	76 eb                	jbe    401070 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x130>
  401085:	48 83 ec 08          	sub    $0x8,%rsp
  401089:	f2 41 0f 11 0c 24    	movsd  %xmm1,(%r12)
  40108f:	4c 89 f2             	mov    %r14,%rdx
  401092:	6a 00                	pushq  $0x0
  401094:	31 f6                	xor    %esi,%esi
  401096:	48 89 df             	mov    %rbx,%rdi
  401099:	49 83 c4 08          	add    $0x8,%r12
  40109d:	e8 8e fd ff ff       	callq  400e30 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)>
  4010a2:	4c 39 e5             	cmp    %r12,%rbp
  4010a5:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
  4010a9:	58                   	pop    %rax
  4010aa:	5a                   	pop    %rdx
  4010ab:	77 cc                	ja     401079 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x139>
  4010ad:	f2 41 0f 10 45 00    	movsd  0x0(%r13),%xmm0
  4010b3:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
  4010b7:	f2 41 0f 11 4d 00    	movsd  %xmm1,0x0(%r13)
  4010bd:	48 83 c4 18          	add    $0x18,%rsp
  4010c1:	5b                   	pop    %rbx
  4010c2:	5d                   	pop    %rbp
  4010c3:	41 5c                	pop    %r12
  4010c5:	41 5d                	pop    %r13
  4010c7:	41 5e                	pop    %r14
  4010c9:	41 5f                	pop    %r15
  4010cb:	c3                   	retq   
  4010cc:	49 83 ef 01          	sub    $0x1,%r15
  4010d0:	48 83 ec 08          	sub    $0x8,%rsp
  4010d4:	f2 42 0f 10 04 fb    	movsd  (%rbx,%r15,8),%xmm0
  4010da:	6a 00                	pushq  $0x0
  4010dc:	4c 89 fe             	mov    %r15,%rsi
  4010df:	4c 89 f2             	mov    %r14,%rdx
  4010e2:	48 89 df             	mov    %rbx,%rdi
  4010e5:	e8 46 fd ff ff       	callq  400e30 <void std::__adjust_heap<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, double, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, long, double, __gnu_cxx::__ops::_Iter_less_iter)>
  4010ea:	4d 85 ff             	test   %r15,%r15
  4010ed:	59                   	pop    %rcx
  4010ee:	5e                   	pop    %rsi
  4010ef:	75 db                	jne    4010cc <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x18c>
  4010f1:	e9 6f ff ff ff       	jmpq   401065 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x125>
  4010f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4010fd:	00 00 00 
  401100:	48 89 f5             	mov    %rsi,%rbp
  401103:	49 89 de             	mov    %rbx,%r14
  401106:	48 89 e8             	mov    %rbp,%rax
  401109:	48 29 d8             	sub    %rbx,%rax
  40110c:	48 83 f8 1f          	cmp    $0x1f,%rax
  401110:	0f 8f 28 ff ff ff    	jg     40103e <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0xfe>
  401116:	48 39 eb             	cmp    %rbp,%rbx
  401119:	74 a2                	je     4010bd <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x17d>
  40111b:	4c 8d 63 08          	lea    0x8(%rbx),%r12
  40111f:	49 39 ec             	cmp    %rbp,%r12
  401122:	74 99                	je     4010bd <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x17d>
  401124:	f2 41 0f 10 0c 24    	movsd  (%r12),%xmm1
  40112a:	41 bd 08 00 00 00    	mov    $0x8,%r13d
  401130:	66 0f 2f 0b          	comisd (%rbx),%xmm1
  401134:	72 4e                	jb     401184 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x244>
  401136:	f2 41 0f 10 44 24 f8 	movsd  -0x8(%r12),%xmm0
  40113d:	49 8d 44 24 f8       	lea    -0x8(%r12),%rax
  401142:	66 0f 2f c1          	comisd %xmm1,%xmm0
  401146:	77 0b                	ja     401153 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x213>
  401148:	e9 a9 00 00 00       	jmpq   4011f6 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x2b6>
  40114d:	0f 1f 00             	nopl   (%rax)
  401150:	48 89 d0             	mov    %rdx,%rax
  401153:	f2 0f 11 40 08       	movsd  %xmm0,0x8(%rax)
  401158:	48 8d 50 f8          	lea    -0x8(%rax),%rdx
  40115c:	f2 0f 10 40 f8       	movsd  -0x8(%rax),%xmm0
  401161:	66 0f 2f c1          	comisd %xmm1,%xmm0
  401165:	77 e9                	ja     401150 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x210>
  401167:	f2 0f 11 08          	movsd  %xmm1,(%rax)
  40116b:	49 83 c4 08          	add    $0x8,%r12
  40116f:	4c 39 e5             	cmp    %r12,%rbp
  401172:	0f 84 45 ff ff ff    	je     4010bd <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x17d>
  401178:	f2 41 0f 10 0c 24    	movsd  (%r12),%xmm1
  40117e:	66 0f 2f 0b          	comisd (%rbx),%xmm1
  401182:	73 b2                	jae    401136 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x1f6>
  401184:	4c 89 e2             	mov    %r12,%rdx
  401187:	4c 29 f2             	sub    %r14,%rdx
  40118a:	48 89 d0             	mov    %rdx,%rax
  40118d:	48 c1 f8 03          	sar    $0x3,%rax
  401191:	48 85 c0             	test   %rax,%rax
  401194:	74 1d                	je     4011b3 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x273>
  401196:	4c 89 ef             	mov    %r13,%rdi
  401199:	48 89 de             	mov    %rbx,%rsi
  40119c:	f2 0f 11 4c 24 08    	movsd  %xmm1,0x8(%rsp)
  4011a2:	48 29 d7             	sub    %rdx,%rdi
  4011a5:	4c 01 e7             	add    %r12,%rdi
  4011a8:	e8 83 f8 ff ff       	callq  400a30 <memmove@plt>
  4011ad:	f2 0f 10 4c 24 08    	movsd  0x8(%rsp),%xmm1
  4011b3:	f2 0f 11 0b          	movsd  %xmm1,(%rbx)
  4011b7:	eb b2                	jmp    40116b <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x22b>
  4011b9:	66 0f 2f da          	comisd %xmm2,%xmm3
  4011bd:	77 20                	ja     4011df <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x29f>
  4011bf:	66 0f 2f d8          	comisd %xmm0,%xmm3
  4011c3:	0f 87 e6 fd ff ff    	ja     400faf <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x6f>
  4011c9:	f2 0f 11 03          	movsd  %xmm0,(%rbx)
  4011cd:	f2 0f 11 08          	movsd  %xmm1,(%rax)
  4011d1:	f2 0f 10 0b          	movsd  (%rbx),%xmm1
  4011d5:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  4011da:	e9 e1 fd ff ff       	jmpq   400fc0 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x80>
  4011df:	f2 0f 11 4b 08       	movsd  %xmm1,0x8(%rbx)
  4011e4:	66 0f 28 ca          	movapd %xmm2,%xmm1
  4011e8:	f2 0f 11 13          	movsd  %xmm2,(%rbx)
  4011ec:	f2 0f 10 45 f8       	movsd  -0x8(%rbp),%xmm0
  4011f1:	e9 ca fd ff ff       	jmpq   400fc0 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x80>
  4011f6:	4c 89 e0             	mov    %r12,%rax
  4011f9:	e9 69 ff ff ff       	jmpq   401167 <void std::__introselect<__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, __gnu_cxx::__normal_iterator<double*, std::vector<double, std::allocator<double> > >, long, __gnu_cxx::__ops::_Iter_less_iter)+0x227>
  4011fe:	66 90                	xchg   %ax,%ax

0000000000401200 <__libc_csu_init>:
  401200:	41 57                	push   %r15
  401202:	41 56                	push   %r14
  401204:	41 89 ff             	mov    %edi,%r15d
  401207:	41 55                	push   %r13
  401209:	41 54                	push   %r12
  40120b:	4c 8d 25 ce 0b 20 00 	lea    0x200bce(%rip),%r12        # 601de0 <__frame_dummy_init_array_entry>
  401212:	55                   	push   %rbp
  401213:	48 8d 2d de 0b 20 00 	lea    0x200bde(%rip),%rbp        # 601df8 <__init_array_end>
  40121a:	53                   	push   %rbx
  40121b:	49 89 f6             	mov    %rsi,%r14
  40121e:	49 89 d5             	mov    %rdx,%r13
  401221:	31 db                	xor    %ebx,%ebx
  401223:	4c 29 e5             	sub    %r12,%rbp
  401226:	48 83 ec 08          	sub    $0x8,%rsp
  40122a:	48 c1 fd 03          	sar    $0x3,%rbp
  40122e:	e8 3d f7 ff ff       	callq  400970 <_init>
  401233:	48 85 ed             	test   %rbp,%rbp
  401236:	74 1e                	je     401256 <__libc_csu_init+0x56>
  401238:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40123f:	00 
  401240:	4c 89 ea             	mov    %r13,%rdx
  401243:	4c 89 f6             	mov    %r14,%rsi
  401246:	44 89 ff             	mov    %r15d,%edi
  401249:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40124d:	48 83 c3 01          	add    $0x1,%rbx
  401251:	48 39 eb             	cmp    %rbp,%rbx
  401254:	75 ea                	jne    401240 <__libc_csu_init+0x40>
  401256:	48 83 c4 08          	add    $0x8,%rsp
  40125a:	5b                   	pop    %rbx
  40125b:	5d                   	pop    %rbp
  40125c:	41 5c                	pop    %r12
  40125e:	41 5d                	pop    %r13
  401260:	41 5e                	pop    %r14
  401262:	41 5f                	pop    %r15
  401264:	c3                   	retq   
  401265:	90                   	nop
  401266:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40126d:	00 00 00 

0000000000401270 <__libc_csu_fini>:
  401270:	f3 c3                	repz retq 

Desensamblado de la sección .fini:

0000000000401274 <_fini>:
  401274:	48 83 ec 08          	sub    $0x8,%rsp
  401278:	48 83 c4 08          	add    $0x8,%rsp
  40127c:	c3                   	retq   
